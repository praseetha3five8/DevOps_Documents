Linode Server Creation [Reff URL :https://www.linode.com/docs/getting-started/]
----------------------
1. Login to Linode 
2. Select Linode >> Add a Linode >> select a Linode plan, and region >> create
3. select the created linode >> Deploy an Image >>  choose The image name (Ubuntu 16.04) >> set root password >> ok
4.reboot the server
5. login to the server using root password.
6. create login user and set password.
useradd -m -d /home/adda -s /bin/bash adda
passwd adda




Linode Setup.
-------------


step 1. Install Nginx [https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-16-04x]
----------
$ sudo apt-get update
$ sudo apt-get install nginx
$ systemctl status nginx

step 2. Install apache2 [https://www.digitalocean.com/community/tutorials/how-to-install-the-apache-web-server-on-ubuntu-16-04]
-----------
$ sudo apt-get update
$ sudo apt-get install apache2
$ sudo systemctl status apache2    [ will be dead change port ]

step4. Configuration apache2 [https://www.digitalocean.com/community/tutorials/how-to-set-up-apache-virtual-hosts-on-ubuntu-16-04]
----------
change port from 80 to 81
$ vi /etc/apache2/ports.conf
Lisen 81

$ sudo systemctl start apache2
$ sudo systemctl status apache2   [ will be up and running]
$ cd /etc/apache2/sites-available
$ cp 000-default.conf demo.lino.adda.io.conf
$ vi demo.lino.adda.io.conf
-------------------
<VirtualHost *:81>

        ServerName demo1.adda.io
        ServerAdmin support@apartmentadda.com
        DocumentRoot /var/www/replica6-demo1-addaio/demo1/src

	<Directory /var/www/replica6-demo1-addaio/demo1/src>
		Options -Indexes
		AllowOverride All

		DirectoryIndex index.php index.html
	</Directory>

        ErrorLog ${APACHE_LOG_DIR}/demo1_addaio_error.log
        CustomLog ${APACHE_LOG_DIR}/demo1_addaio_access.log combined

        MaxKeepAliveRequests 150
        KeepAlive On
        KeepAliveTimeout 900


	RewriteEngine On

                RewriteCond %{REQUEST_URI} ^/index\.php$ [nocase]
                RewriteRule ^/index\.php$ /home/index\.php [last,PT]


                RewriteCond %{REQUEST_URI} ^/home/index\.php$ [nocase]
                RewriteRule ^/home/index\.php$ / [last,redirect=301]

                #RewriteCond %{REQUEST_FILENAME} !-f
                #RewriteCond %{REQUEST_FILENAME} !-d
                #RewriteRule ^/api/(.*)$ /api/adda.php?request=$1 [QSA,NC,L]

                RewriteCond %{REQUEST_FILENAME} !-f
                RewriteCond %{REQUEST_FILENAME} !-d
                RewriteRule ^/api/g1/(.*)$ /api/g1/gatekeeper.php?request=$1 [QSA,NC,L]

		RewriteCond %{REQUEST_FILENAME} !-f
                RewriteCond %{REQUEST_FILENAME} !-d
                RewriteRule ^/api/(.*)$ /api/adda.php?request=$1 [QSA,NC,L]

	####################################
	# Alias /blog to /wordpress folder
	###################################
	Alias /blog /var/www/adda/src/wordpress


    #####################################
    # SEO Rules
    #####################################
    RewriteRule ^/society-accounting-software https://%{SERVER_NAME}/home/housing-society-accounting-software.php [last,redirect=301]
    RewriteRule ^/society-management-software https://%{SERVER_NAME}/home/apartment-management-software-ams.php [last,redirect=301]
    RewriteRule ^/apartment-management-software https://%{SERVER_NAME}/home/apartment-management-software-ams.php [last,redirect=301]
    RewriteRule ^/society-billing-software https://%{SERVER_NAME}/home/housing-society-accounting-software.php [last,redirect=301]
    RewriteRule ^/housing-society-software https://%{SERVER_NAME}/home/housing-society-accounting-software.php [last,redirect=301]
    RewriteRule ^/society-communication-software https://%{SERVER_NAME}/home/apartment-communication-software.php [last,redirect=301]
    RewriteRule ^/testimonials https://%{SERVER_NAME}/home/addaTestimonial.php [last,redirect=301]


		######################################################
		# Rewrite Public Pages : Old Format to new Format
		######################################################
		RewriteCond %{REQUEST_URI} ^/adda/(.*)\-address\-direction\.php$ [nocase] [OR]
		RewriteRule ^/adda/(.*)\-address\-direction\.php$ /$1/location [last,redirect=301]

		RewriteCond %{REQUEST_URI} ^/adda/(.*)\-contact\.php$ [nocase]
		RewriteRule ^/adda/(.*)\-contact\.php$ /$1/contact [last,redirect=301]

		RewriteCond %{REQUEST_URI} ^/adda/(.*)\-rental\-buy\-sell\.php$ [nocase]
		RewriteRule ^/adda/(.*)\-rental\-buy\-sell\.php$ /$1/buy-sell [last,redirect=301]

		RewriteCond %{REQUEST_URI} ^/adda/(.*)\.php$ [nocase]
		RewriteRule ^/adda/(.*)\.php$ /$1 [last,redirect=301]




		####################################################
		# Internal Rewrite ( Vanity Urls )
		# If File/Dir does not Exist. Direct to /public/index.php for Adda Public pages
		####################################################
		RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-f
		RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-d
		RewriteCond %{REQUEST_URI} !^/social/?.*  [nocase]
		#RewriteCond %{REQUEST_URI} !^/phpmyadmin/?.*  [nocase]
		RewriteCond %{REQUEST_URI} !^/dashboard/?.*  [nocase]
		RewriteCond %{REQUEST_URI} !^/features/?.*  [nocase]
		RewriteCond %{REQUEST_URI} !^/blog/?.*  [nocase]
		RewriteCond %{REQUEST_URI} !^/wordpress/?.*  [nocase]
		RewriteCond %{REQUEST_URI} !^/buzzar/?.*  [nocase]
		RewriteCond %{REQUEST_URI} !^/city/?.*  [nocase]
		RewriteCond %{REQUEST_URI} !^/external/?.*  [nocase]
		RewriteCond %{REQUEST_URI} !^/rest/?.*  [nocase]
		RewriteRule ^/?([a-z0-9_\-]+)?/?([a-z0-9_\-]+)?/?.*$ /public/index.php?apt=$1&page=$2 [NC]

	        #RewriteCond %{REQUEST_FILENAME} !-f
        	#RewriteCond %{REQUEST_FILENAME} !-d
	        #RewriteRule ^/api/(.*)$ /api/adda.php?request=$1 [QSA,NC,L]

                RewriteCond %{REQUEST_FILENAME} !-f
                RewriteCond %{REQUEST_FILENAME} !-d
                RewriteRule ^/api/g1/(.*)$ /api/g1/gatekeeper.php?request=$1 [QSA,NC,L]

		RewriteCond %{REQUEST_FILENAME} !-f
                RewriteCond %{REQUEST_FILENAME} !-d
                RewriteRule ^/api/(.*)$ /api/adda.php?request=$1 [QSA,NC,L]

		RewriteCond %{REQUEST_FILENAME} !-f
		RewriteCond %{REQUEST_FILENAME} !-d
		RewriteRule ^/adda2/(.*)$ /api/adda2.php?request=$1 [QSA,NC,L]

		# For debugging only
		# RewriteRule ^(.*)$ /public/index.php?uri=%{REQUEST_URI} [NC]

        ############################
        # Rewrite http to httpS
        # Rewrite to HTTPS ONLY if Load balancer Did not send https in header
        ##############################
        #RewriteCond %{HTTP_HOST} !^localhost
	#RewriteCond %{HTTP:X-Forwarded-Proto} !https
        #RewriteCond %{REQUEST_URI} !^/(rest|blog|wordpress|external|faq/?).*  [nocase]
        #RewriteRule ^.*$ https://%{SERVER_NAME}%{REQUEST_URI} [last,redirect=301]


        RewriteCond %{HTTP:X-Forwarded-Proto} https
        RewriteCond %{REQUEST_URI} ^/blog/.*  [nocase]
        RewriteRule ^.*$ http://%{SERVER_NAME}%{REQUEST_URI} [last,redirect=301]


	##################################
	# Rewrite www site to NON-www site
	###################################
	#RewriteCond %{HTTP_HOST}  ^www.apartmentadda.com [nocase]
	#RewriteRule ^(.*)         https://apartmentadda.com$1 [last,redirect=301]


	###########################################
	# Email template image redirect
	##############################################
	RewriteCond %{REQUEST_URI} ^/modules/email_temp_img/fb_icon.png$
	RewriteRule ^(.*) http://d291t6p76xxgr.cloudfront.net/email/fb_icon.png [last,redirect=301]

        RewriteCond %{REQUEST_URI} ^/modules/email_temp_img/twitter_icon.png$
        RewriteRule ^(.*) http://d291t6p76xxgr.cloudfront.net/email/twitter_icon.png [last,redirect=301]

        RewriteCond %{REQUEST_URI} ^/modules/email_temp_img/wordpress_icon.png$
        RewriteRule ^(.*) http://d291t6p76xxgr.cloudfront.net/email/wordpress_icon.png [last,redirect=301]

        RewriteCond %{REQUEST_URI} ^/modules/email_temp_img/classified_icon_1.png$
        RewriteRule ^(.*) http://d291t6p76xxgr.cloudfront.net/email/classified_icon_1.png [last,redirect=301]

        RewriteCond %{REQUEST_URI} ^/modules/email_temp_img/email_icon.png$
        RewriteRule ^(.*) http://d291t6p76xxgr.cloudfront.net/email/email_icon.png [last,redirect=301]


	############################################
	# compress text, html, javascript, css, xml: 
	############################################
	AddOutputFilterByType DEFLATE text/plain 
	AddOutputFilterByType DEFLATE text/html 
	AddOutputFilterByType DEFLATE text/xml 
	AddOutputFilterByType DEFLATE text/css 
	AddOutputFilterByType DEFLATE application/xml 
	AddOutputFilterByType DEFLATE application/xhtml+xml 
	AddOutputFilterByType DEFLATE application/rss+xml 
	AddOutputFilterByType DEFLATE application/javascript 
	AddOutputFilterByType DEFLATE application/x-javascript 
	# Or, compress certain file types by extension: 
	<files *.php> 
		SetOutputFilter DEFLATE 
	</files>

</VirtualHost>
# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
---------------------------------------------------------------------------------------


note: Edit the file accourdinly servername, Document Root .etc

$apachectl -t    [ to verify any apache syntax error]
$ a2enmod rewrite    --- [ Run this command to resolve 'RewriteEngin ON' apache config error]
$ sudo a2ensite 'new_config file name'  [ To make the configuration enable; this will create softlink under sites-enabled -- for revert a2dissite config_file_name ]
$ service apache2 reload
$ service apache2 start


step 3. Config nginx [https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-16-04]
----------
$ sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/demo.lino.adda.io.conf
$ cd /etc/nginx/sites-available/
$ vi demo.lino.adda.io.conf
------------------
# You may add here your
# server {
#	...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

server {
	listen   80; ## listen for ipv4; this line is default and implied
	#listen   [::]:80 default ipv6only=on; ## listen for ipv6


	root /var/www/replica6-demo1-addaio/demo_addaio/src/;
	index index.php index.html index.htm;
	more_set_headers "Server: ";
	more_set_headers "X-Powered-By: ";

	# Make site accessible from http://localhost/
	server_name demo1.adda.io;

	location ~* \.(jpg|jpeg|gif|png|bmp|ico|pdf|flv|swf|exe|html|htm|txt|css|js|ttf|eot|woff|otf|svg) {
		add_header        Cache-Control public;
	        add_header        Cache-Control must-revalidate;
        	expires           1y;
		#access_log  on;
	}

	location ~ (api\/signup|api\/mobilejoin\/join_api) {
		limit_req zone=one burst=5;
		limit_req zone=two burst=5;
		limit_conn three 5;
	}

	location /iclock {
        	proxy_set_header X-Real-IP  $remote_addr;
	        proxy_set_header X-Forwarded-For $remote_addr;
        	proxy_set_header Host apartmentadda.com;
	        proxy_pass http://apartmentadda.com/iclock;
        	break;
	}

	location /(javascript|css|myadda\/js|myadda\/css|myadda\/img|images|home\/images|home\/img|home\/css|home\/font|home\/js|home\/icon|home\/site-js|home\/site-css|myadda\/fonts|events\/fonts|faq/inc\/fonts|adda_theme\/fonts|public\/templates\/fonts|workshop\/facility-management|faq\/inc\/fonts|modules\/inc\/dompdf\/lib\/fonts|myadda\/js\/walkthrough\/css\/font|myadda\/fonts)/ {
		expires 1y;
		root    /var/www/replica6-demo1-addaio/demo_addaio/src/;
		#access_log  on;
		break;
	}


	error_page 405	/error;
	location = /404.html {
		root	/var/www/nginx_pages/;
	}

	#chunkin on;
	#error_page 411 = @my_411_error;
	#location @my_411_error {
	#	chunkin_resume;
	#}

	rewrite	^/blog/(.*)/(themes|plugins\/facebook\/static\/css|uploads|js|css|wp-content)/(.*)$	/wordpress/$1/$2/$3;

	location / {

		if ($request_uri ~* ".(jpg|jpeg|gif|gz|zip|flv|rar|wmv|avi|css|swf|png|htc|ico|mpeg|mpg|txt|mp3|mov|js|ttf|eot|woff|otf|svg)(\?v=[0-9.]+)?$") {
			expires 1y;
			break;
		}

		chunked_transfer_encoding on;
		proxy_buffering on;
		proxy_read_timeout 600;
		proxy_connect_timeout 120;
		#limit_rate 5m;
		# First attempt to serve request as file, then
		# as directory, then fall back to index.html
		#try_files $uri $uri/ /index.html;
		# Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules
		proxy_set_header X-Forwarded-By  "By-NGINX";
		proxy_set_header X-Real-IP  $http_x_forwarded_for;
		proxy_set_header X-Forwarded-For $http_x_forwarded_for;
		proxy_set_header Host $host;
		proxy_pass http://127.0.0.1:81/;
		#access_log  on;
	}

	location /doc/ {
		alias /usr/share/doc/;
		autoindex on;
		allow 127.0.0.1;
		deny all;
	}

	location /nginx_status {
		stub_status on;
		access_log   off;
		allow 127.0.0.1;
		deny all;
	}

	# Only for nginx-naxsi : process denied requests
	#location /RequestDenied {
		# For example, return an error code
		#return 418;
	#}

	#error_page 404 /404.html;

	# redirect server error pages to the static page /50x.html
	#
	#error_page 500 502 503 504 /50x.html;
	#location = /50x.html {
	#	root /usr/share/nginx/www;
	#}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	fastcgi_split_path_info ^(.+\.php)(/.+)$;
	#	# NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
	#
	#	# With php5-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
	#	# With php5-fpm:
	#	fastcgi_pass unix:/var/run/php5-fpm.sock;
	#	fastcgi_index index.php;
	#	include fastcgi_params;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#	listen 8000;
#	listen somename:8080;
#	server_name somename alias another.alias;
#	root html;
#	index index.html index.htm;
#
#	location / {
#		try_files $uri $uri/ /index.html;
#	}
#}


# HTTPS server
#
#server {
#	listen 443;
#	server_name localhost;
#
#	root html;
#	index index.html index.htm;
#
#	ssl on;
#	ssl_certificate cert.pem;
#	ssl_certificate_key cert.key;
#
#	ssl_session_timeout 5m;
#
#	ssl_protocols SSLv3 TLSv1;
#	ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
#	ssl_prefer_server_ciphers on;
#
#	location / {
#		try_files $uri $uri/ /index.html;
#	}
#}

------------------------------------------
create a soft link under sites-enables

$ sudo ln -s /etc/nginx/sites-available/demo.lino.adda.io.conf /etc/nginx/sites-enabled/
$ sudo nginx -t    [verify any nginx syntax error]
[error: nginx: [emerg] zero size shared memory zone "one"
solved : removed limit_req zone=one burst=5; all fileds from sites-enabled new configuration]


step 4. Install mysql [https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-ubuntu-16-04]
--------
$ sudo apt-get update
$ sudo apt-get install mysql-server   [ mysql root password Adda@!@#]
$ mysql_secure_installation   [ secure installation]
$ systemctl status mysql
$ mysql -u root -p    [ login to the achine]

change mysql port [http://bhargavamin.com/how-to-do/change-mysql-server-port-ubuntu/]
$ vi /etc/mysql/mysql.conf.d/mysqld.cnf
port=3398


step 5. Install Redis (with password) [https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-redis-on-ubuntu-16-04]
----------------
   $ sudo apt-get update
   $ sudo apt-get install build-essential tcl
   $ cd /tmp
   $ curl -O http://download.redis.io/redis-stable.tar.gz
   $ tar xzvf redis-stable.tar.gz
   $ cd redis-stable
   $ make
   $ make test
   $ make install
   $ sudo mkdir /etc/redis
   $ sudo cp /tmp/redis-stable/redis.conf /etc/redis
   $ vi /etc/redis/redis.conf
EDIT
------------------------------
supervised systemd
dir /var/lib/redis
------------------------------
   $ vi /etc/systemd/system/redis.service
-------------------------------------------------
[Unit]
Description=Redis In-Memory Data Store
After=network.target

[Service]
User=redis
Group=redis
ExecStart=/usr/local/bin/redis-server /etc/redis/redis.conf
ExecStop=/usr/local/bin/redis-cli shutdown
Restart=always

[Install]
WantedBy=multi-user.target
----------------------------------------------------
   $ sudo adduser --system --group --no-create-home redis
   $ sudo mkdir /var/lib/redis
   $ sudo chown redis:redis /var/lib/redis
   $ sudo chown redis:redis /var/lib/redis
   $ sudo systemctl start redis
   $ sudo systemctl status redis

Set password and change port
   $vi /etc/redis/redis.conf
requirepass "Lino@pass"
port 9901
   $ restart redis 

step 6. all php components, composer (aws-sdk), php-redis, php-mysql, php-memcahe 
[https://fearby.com/article/how-to-install-php-7-2-latest-on-ubuntu-16-04/]
[https://websiteforstudents.com/how-to-install-php-composer-on-ububuntu-16-04-17-10-18-04/]
[https://docs.aws.amazon.com/sdk-for-php/v3/developer-guide/getting-started_installation.html]
-----------
   $ apt list --installed | grep php    [command to list all installed php]
   $ php -m      [ command to list all php modules]
   $ apt-get install python-software-properties
   $ add-apt-repository ppa:ondrej/php
   $ apt-get update
   $ apt-get install php7.2
   $ apt-get install php-pear php7.2-curl php7.2-dev php7.2-mbstring php7.2-zip php7.2-mysql php7.2-xml php7.2-bcmath php7.2-bz2 php7.2-cli php7.2-common php7.2-gd php7.2-json php7.2-opcache php7.2-readline php7.2-soap php7.2-sqlite3 php7.2-xsl
   $ apt-get install php7.2-igbinary php7.2-imagick php7.2-memcache php7.2-memcached php7.2-mongodb php7.2-msgpack php7.2-redis php7.2-solr php7.2-xdebug

Install composer
   $ curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer
   $ sudo composer self-update
Install aws-sdk
   $ cd /usr/share/php
   $ composer require aws/aws-sdk-php

step 7: upload codes, creds to /var/www/
---------
  $ apt-get install git-core
  $ mkdir /var/www/adda/
  $ ssh-keygen
  $ copy the rsa key (rsa.pub) and save to github
  $ cd /var/www/adda/
  $ git init
  $ git remote add origin git@github.com:apartmentadda/addaweb.git
  $ git pull origin production
-----------------
copy the creds folder from any of the server and create under /var/www/
- change #Elastic cache config from aws to localhost
- change redis and mysql username,password

step 8. create domain under Route53
------------
create CNAME record with the domain 


step 9: Upload all mysql BD
----------
- Download from thanishka server == cd /bkp2/rds-full-backup/compressed_local.
- encrypting using -- openssl aes-256-ecb -salt    (password : 1#Pa)c=QO@AN&>HV|{).}Ccr\   )
- NOTE:
[Encrypt:
openssl enc aes-256-ecb -a -salt -in secrets.txt -out secrets.txt.enc
Decrypt:
openssl enc aes-256-ecb -d -a -in secrets.txt.enc -out secrets.txt.new
]
- $ sudo apt update && sudo apt upgrade openssl
- $ openssl version  [to verify the version]
- decript
eg:
openssl enc -d -aes-256-ecb -in _adda_notification_full.enc.gz -out _adda_notification_full.dec.gz
unzip after decript eg:
- $ tar -xvzf _adda_notification_full.enc.gz
- create DBs
   adda_notification  
  bhaaraath          
  bhaaraath2011      
   bhaaraath2012      
   bhaaraath2013      
   bhaaraath2014      
   bhaaraath2015      
   bhaaraath2016      
   bhaaraath2017      
  bhaaraath2018      
  bhaaraathF000005   
  bhaaraathF000089   
  bhaaraathF000104   
  bhaaraathF000570   
  bhaaraathF002520   
  bhaaraatharchive10 
  bhaaraatharchive11 
  bhaaraatharchive12 
  gatekeeper                   
  shahenshah        
  videshi            
  videshi2017        
  videshi2018  
- mysql -u username -p DBNAME < DBNAME.sql

- Install byobu



